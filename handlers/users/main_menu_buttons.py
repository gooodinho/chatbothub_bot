from aiogram import types

from aiogram.dispatcher import FSMContext
from keyboards.default.main_menu import main_menu
from keyboards.default.bots_page_menu import bots_menu
from utils.notify_admins import question_notify
from loader import dp


@dp.message_handler(text="–î–ª—è —á–µ–≥–æ –Ω—É–∂–Ω—ã —á–∞—Ç-–±–æ—Ç—ã?üëæ")
async def get_bots_page(message: types.Message):
    # CHANGE TEXT
    await message.answer("""<b>–ß—Ç–æ —Ç–∞–∫–æ–µ —á–∞—Ç-–±–æ—Ç?</b>

–ß–∞—Ç-–±–æ—Ç ‚Äî —ç—Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞, –æ—Ç–ø—Ä–∞–≤–ª—è—é—â–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç–≤–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö, –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞—Ö –∏ –Ω–∞ —Å–∞–π—Ç–∞—Ö. 
–° –ø–æ–º–æ—â—å—é —á–∞—Ç-–±–æ—Ç–æ–≤ –º–æ–∂–Ω–æ —É–ø—Ä–æ—â–∞—Ç—å –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—é —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É—è –∞–ª–≥–æ—Ä–∏—Ç–º—ã –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞,
–ø–æ–∑–≤–æ–ª—è—é—â–∏–µ –∏–º–∏—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å –∂–∏–≤—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º.
–û–Ω–∏ —É–¥–µ—Ä–∂–∏–≤–∞—é—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –¥–∞—é—Ç –æ—Ö–≤–∞—Ç—ã –∏ —É–º–µ–Ω—å—à–∞—é—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—É—Ç–∏–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã.
    """, reply_markup=bots_menu)


@dp.message_handler(text="–£ –º–µ–Ω—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—ÅüëÅ")
async def ask_question(message: types.Message, state: FSMContext):
    await message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –í–∞—à –≤–æ–ø—Ä–æ—Å, –í–∞–º —Å–∫–æ—Ä–æ –æ—Ç–≤–µ—Ç—è—Ç", reply_markup=bots_menu)
    await state.set_state("questions")


@dp.message_handler(state="questions", text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥")
async def finish_questions(message: types.Message, state: FSMContext):
    await state.finish()
    await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_menu)


@dp.message_handler(state="questions")
async def send_msg_to_adm(message: types.Message, state: FSMContext):
    await question_notify(dp, text=f"{message.from_user.id}\n"
                            f"{message.from_user.full_name}\n"
                            f"{message.from_user.username}\n"
                            f"–°–æ–æ–±—â–µ–Ω–∏–µ: {message.text}")


@dp.message_handler(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥")
async def show_main_menu(message: types.Message):
    await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_menu)
